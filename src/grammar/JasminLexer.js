// Generated from ./grammar/Jasmin.g4 by ANTLR 4.13.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,44,261,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,1,0,1,0,1,0,1,1,1,1,1,1,1,2,1,2,1,2,3,2,99,8,2,1,
3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,
6,1,6,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,
10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,13,
1,13,1,13,1,14,1,14,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,
19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,22,1,23,1,23,1,23,1,24,1,24,1,24,
1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,28,1,28,1,29,1,
29,1,29,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,33,1,33,
1,34,1,34,1,35,1,35,1,36,1,36,1,37,1,37,5,37,218,8,37,10,37,12,37,221,9,
37,1,38,3,38,224,8,38,1,38,4,38,227,8,38,11,38,12,38,228,1,39,1,39,5,39,
233,8,39,10,39,12,39,236,9,39,1,39,1,39,1,40,4,40,241,8,40,11,40,12,40,242,
1,40,1,40,4,40,247,8,40,11,40,12,40,248,1,41,1,41,1,42,1,42,1,43,4,43,256,
8,43,11,43,12,43,257,1,43,1,43,1,234,0,44,1,1,3,2,5,3,7,4,9,5,11,6,13,7,
15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,
20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,
32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,
44,1,0,4,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,1,0,48,57,3,
0,9,10,13,13,32,32,269,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,
9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,
0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,
1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,
0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,
0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,
65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,
0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,
1,0,0,0,1,89,1,0,0,0,3,92,1,0,0,0,5,98,1,0,0,0,7,100,1,0,0,0,9,105,1,0,0,
0,11,108,1,0,0,0,13,113,1,0,0,0,15,120,1,0,0,0,17,125,1,0,0,0,19,131,1,0,
0,0,21,136,1,0,0,0,23,141,1,0,0,0,25,147,1,0,0,0,27,150,1,0,0,0,29,153,1,
0,0,0,31,157,1,0,0,0,33,159,1,0,0,0,35,161,1,0,0,0,37,163,1,0,0,0,39,165,
1,0,0,0,41,167,1,0,0,0,43,169,1,0,0,0,45,171,1,0,0,0,47,174,1,0,0,0,49,177,
1,0,0,0,51,180,1,0,0,0,53,184,1,0,0,0,55,187,1,0,0,0,57,191,1,0,0,0,59,193,
1,0,0,0,61,196,1,0,0,0,63,199,1,0,0,0,65,205,1,0,0,0,67,207,1,0,0,0,69,209,
1,0,0,0,71,211,1,0,0,0,73,213,1,0,0,0,75,215,1,0,0,0,77,223,1,0,0,0,79,230,
1,0,0,0,81,240,1,0,0,0,83,250,1,0,0,0,85,252,1,0,0,0,87,255,1,0,0,0,89,90,
5,43,0,0,90,91,5,43,0,0,91,2,1,0,0,0,92,93,5,45,0,0,93,94,5,45,0,0,94,4,
1,0,0,0,95,99,3,25,12,0,96,99,3,29,14,0,97,99,3,27,13,0,98,95,1,0,0,0,98,
96,1,0,0,0,98,97,1,0,0,0,99,6,1,0,0,0,100,101,5,108,0,0,101,102,5,101,0,
0,102,103,5,97,0,0,103,104,5,107,0,0,104,8,1,0,0,0,105,106,5,115,0,0,106,
107,5,105,0,0,107,10,1,0,0,0,108,109,5,101,0,0,109,110,5,108,0,0,110,111,
5,115,0,0,111,112,5,101,0,0,112,12,1,0,0,0,113,114,5,101,0,0,114,115,5,108,
0,0,115,116,5,102,0,0,116,117,5,105,0,0,117,118,5,116,0,0,118,119,5,111,
0,0,119,14,1,0,0,0,120,121,5,116,0,0,121,122,5,111,0,0,122,123,5,68,0,0,
123,124,5,111,0,0,124,16,1,0,0,0,125,126,5,108,0,0,126,127,5,101,0,0,127,
128,5,119,0,0,128,129,5,104,0,0,129,130,5,105,0,0,130,18,1,0,0,0,131,132,
5,102,0,0,132,133,5,111,0,0,133,134,5,102,0,0,134,135,5,111,0,0,135,20,1,
0,0,0,136,137,5,116,0,0,137,138,5,114,0,0,138,139,5,117,0,0,139,140,5,101,
0,0,140,22,1,0,0,0,141,142,5,102,0,0,142,143,5,97,0,0,143,144,5,108,0,0,
144,145,5,115,0,0,145,146,5,101,0,0,146,24,1,0,0,0,147,148,5,110,0,0,148,
149,5,99,0,0,149,26,1,0,0,0,150,151,5,105,0,0,151,152,5,109,0,0,152,28,1,
0,0,0,153,154,5,106,0,0,154,155,5,103,0,0,155,156,5,108,0,0,156,30,1,0,0,
0,157,158,5,42,0,0,158,32,1,0,0,0,159,160,5,47,0,0,160,34,1,0,0,0,161,162,
5,43,0,0,162,36,1,0,0,0,163,164,5,45,0,0,164,38,1,0,0,0,165,166,5,61,0,0,
166,40,1,0,0,0,167,168,5,62,0,0,168,42,1,0,0,0,169,170,5,60,0,0,170,44,1,
0,0,0,171,172,5,62,0,0,172,173,5,61,0,0,173,46,1,0,0,0,174,175,5,60,0,0,
175,176,5,61,0,0,176,48,1,0,0,0,177,178,5,61,0,0,178,179,5,61,0,0,179,50,
1,0,0,0,180,181,5,61,0,0,181,182,5,61,0,0,182,183,5,61,0,0,183,52,1,0,0,
0,184,185,5,33,0,0,185,186,5,61,0,0,186,54,1,0,0,0,187,188,5,33,0,0,188,
189,5,61,0,0,189,190,5,61,0,0,190,56,1,0,0,0,191,192,5,37,0,0,192,58,1,0,
0,0,193,194,5,124,0,0,194,195,5,124,0,0,195,60,1,0,0,0,196,197,5,38,0,0,
197,198,5,38,0,0,198,62,1,0,0,0,199,200,5,87,0,0,200,201,5,55,0,0,201,202,
5,72,0,0,202,203,5,76,0,0,203,204,5,77,0,0,204,64,1,0,0,0,205,206,5,123,
0,0,206,66,1,0,0,0,207,208,5,125,0,0,208,68,1,0,0,0,209,210,5,40,0,0,210,
70,1,0,0,0,211,212,5,41,0,0,212,72,1,0,0,0,213,214,5,33,0,0,214,74,1,0,0,
0,215,219,7,0,0,0,216,218,7,1,0,0,217,216,1,0,0,0,218,221,1,0,0,0,219,217,
1,0,0,0,219,220,1,0,0,0,220,76,1,0,0,0,221,219,1,0,0,0,222,224,5,45,0,0,
223,222,1,0,0,0,223,224,1,0,0,0,224,226,1,0,0,0,225,227,7,2,0,0,226,225,
1,0,0,0,227,228,1,0,0,0,228,226,1,0,0,0,228,229,1,0,0,0,229,78,1,0,0,0,230,
234,5,34,0,0,231,233,9,0,0,0,232,231,1,0,0,0,233,236,1,0,0,0,234,235,1,0,
0,0,234,232,1,0,0,0,235,237,1,0,0,0,236,234,1,0,0,0,237,238,5,34,0,0,238,
80,1,0,0,0,239,241,7,2,0,0,240,239,1,0,0,0,241,242,1,0,0,0,242,240,1,0,0,
0,242,243,1,0,0,0,243,244,1,0,0,0,244,246,5,46,0,0,245,247,7,2,0,0,246,245,
1,0,0,0,247,248,1,0,0,0,248,246,1,0,0,0,248,249,1,0,0,0,249,82,1,0,0,0,250,
251,5,59,0,0,251,84,1,0,0,0,252,253,5,44,0,0,253,86,1,0,0,0,254,256,7,3,
0,0,255,254,1,0,0,0,256,257,1,0,0,0,257,255,1,0,0,0,257,258,1,0,0,0,258,
259,1,0,0,0,259,260,6,43,0,0,260,88,1,0,0,0,9,0,98,219,223,228,234,242,248,
257,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class JasminLexer extends antlr4.Lexer {

    static grammarFileName = "Jasmin.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'++'", "'--'", null, "'leak'", "'si'", "'else'", 
                         "'elfito'", "'toDo'", "'lewhi'", "'fofo'", "'true'", 
                         "'false'", "'nc'", "'im'", "'jgl'", "'*'", "'/'", 
                         "'+'", "'-'", "'='", "'>'", "'<'", "'>='", "'<='", 
                         "'=='", "'==='", "'!='", "'!=='", "'%'", "'||'", 
                         "'&&'", "'W7HLM'", "'{'", "'}'", "'('", "')'", 
                         "'!'", null, null, null, null, "';'", "','" ];
	static symbolicNames = [ null, null, null, "PR", "IMPRESION", "IF_BASICO", 
                          "ELSE", "ELSE_IF", "DO", "WHILE", "FOR", "TRUE", 
                          "FALSE", "INT", "FLOAT", "CHAR", "MUL", "DIV", 
                          "ADD", "SUB", "ASIGNACION", "MAYORQ", "MENORQ", 
                          "MAYOR_IGUAL", "MENOR_IGUAL", "IGUALDAD_DEBIL", 
                          "IGUALDAD_FUERTE", "DIF_DEBIL", "DIF_FUERTE", 
                          "RESIDUO", "OR", "AND", "TPG", "ALLAVE", "CLLAVE", 
                          "APARENTESIS", "CPARENTESIS", "AADMIRACION", "ID", 
                          "NUM", "CADENA", "DEC", "SEMI", "COMA", "WS" ];
	static ruleNames = [ "T__0", "T__1", "PR", "IMPRESION", "IF_BASICO", "ELSE", 
                      "ELSE_IF", "DO", "WHILE", "FOR", "TRUE", "FALSE", 
                      "INT", "FLOAT", "CHAR", "MUL", "DIV", "ADD", "SUB", 
                      "ASIGNACION", "MAYORQ", "MENORQ", "MAYOR_IGUAL", "MENOR_IGUAL", 
                      "IGUALDAD_DEBIL", "IGUALDAD_FUERTE", "DIF_DEBIL", 
                      "DIF_FUERTE", "RESIDUO", "OR", "AND", "TPG", "ALLAVE", 
                      "CLLAVE", "APARENTESIS", "CPARENTESIS", "AADMIRACION", 
                      "ID", "NUM", "CADENA", "DEC", "SEMI", "COMA", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

JasminLexer.EOF = antlr4.Token.EOF;
JasminLexer.T__0 = 1;
JasminLexer.T__1 = 2;
JasminLexer.PR = 3;
JasminLexer.IMPRESION = 4;
JasminLexer.IF_BASICO = 5;
JasminLexer.ELSE = 6;
JasminLexer.ELSE_IF = 7;
JasminLexer.DO = 8;
JasminLexer.WHILE = 9;
JasminLexer.FOR = 10;
JasminLexer.TRUE = 11;
JasminLexer.FALSE = 12;
JasminLexer.INT = 13;
JasminLexer.FLOAT = 14;
JasminLexer.CHAR = 15;
JasminLexer.MUL = 16;
JasminLexer.DIV = 17;
JasminLexer.ADD = 18;
JasminLexer.SUB = 19;
JasminLexer.ASIGNACION = 20;
JasminLexer.MAYORQ = 21;
JasminLexer.MENORQ = 22;
JasminLexer.MAYOR_IGUAL = 23;
JasminLexer.MENOR_IGUAL = 24;
JasminLexer.IGUALDAD_DEBIL = 25;
JasminLexer.IGUALDAD_FUERTE = 26;
JasminLexer.DIF_DEBIL = 27;
JasminLexer.DIF_FUERTE = 28;
JasminLexer.RESIDUO = 29;
JasminLexer.OR = 30;
JasminLexer.AND = 31;
JasminLexer.TPG = 32;
JasminLexer.ALLAVE = 33;
JasminLexer.CLLAVE = 34;
JasminLexer.APARENTESIS = 35;
JasminLexer.CPARENTESIS = 36;
JasminLexer.AADMIRACION = 37;
JasminLexer.ID = 38;
JasminLexer.NUM = 39;
JasminLexer.CADENA = 40;
JasminLexer.DEC = 41;
JasminLexer.SEMI = 42;
JasminLexer.COMA = 43;
JasminLexer.WS = 44;



