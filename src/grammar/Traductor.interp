token literal names:
null
'main'
'auto'
'break'
'case'
'char'
'const'
'continue'
'default'
'do'
'double'
'else if'
'else'
'enum'
'extern'
'float'
'for'
'goto'
'if'
'int'
'long'
'register'
'return'
'short'
'signed'
'sizeof'
'static'
'struct'
'switch'
'typedef'
'union'
'unsigned'
'void'
'volatile'
'while'
'include'
'printf'
'scanf'
'fprintf'
'fscanf'
'sprintf'
'fseek'
'fopen'
'fclose'
'getch'
'void main()'
null
null
null
null
';'
'{'
'}'
'('
')'
'!'
'*'
'/'
'+'
'-'
'='
'>'
'<'
'>='
'<='
'=='
'==='
'!='
'!=='
'||'
'&&'
null

token symbolic names:
null
MAIN
AUTO
BREAK
CASE
CHAR
CONST
CONTINUE
DEFAULT
DO
DOUBLE
ELSE_IF
ELSE
ENUM
EXTERN
FLOAT
FOR
GOTO
IF
INT
LONG
REGISTER
RETURN
SHORT
SIGNED
SIZEOF
STATIC
STRUCT
SWITCH
TYPEDEF
UNION
UNSIGNED
VOID
VOLATILE
WHILE
INCLUDE
PRINTF
SCANF
FPRINTF
FSCANF
SPRINTF
FSEEK
FOPEN
FCLOSE
GETCH
VOID_MAIN
ID
NUM
CADENA
DEC
SEMI
ALLAVE
CLLAVE
APARENTESIS
CPARENTESIS
AADMIRACION
MUL
DIV
ADD
SUB
ASIGNACION
MAYORQ
MENORQ
MAYOR_IGUAL
MENOR_IGUAL
IGUALDAD_DEBIL
IGUALDAD_FUERTE
DIF_DEBIL
DIF_FUERTE
OR
AND
WS

rule names:
contenido
pr
varios


atn:
[4, 1, 71, 18, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 1, 0, 1, 0, 5, 0, 9, 8, 0, 10, 0, 12, 0, 12, 9, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 10, 0, 3, 0, 2, 4, 0, 2, 10, 0, 1, 5, 9, 12, 15, 16, 18, 19, 22, 22, 28, 28, 32, 32, 34, 34, 36, 36, 45, 45, 1, 0, 46, 70, 16, 0, 10, 1, 0, 0, 0, 2, 13, 1, 0, 0, 0, 4, 15, 1, 0, 0, 0, 6, 9, 3, 2, 1, 0, 7, 9, 3, 4, 2, 0, 8, 6, 1, 0, 0, 0, 8, 7, 1, 0, 0, 0, 9, 12, 1, 0, 0, 0, 10, 11, 1, 0, 0, 0, 10, 8, 1, 0, 0, 0, 11, 1, 1, 0, 0, 0, 12, 10, 1, 0, 0, 0, 13, 14, 7, 0, 0, 0, 14, 3, 1, 0, 0, 0, 15, 16, 7, 1, 0, 0, 16, 5, 1, 0, 0, 0, 2, 8, 10]